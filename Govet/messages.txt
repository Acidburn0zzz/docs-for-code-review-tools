Assembly declarations

Flag: -asmdecl

Mismatches between assembly files and Go function declarations.


Useless assignments

Flag: -assign

Check for useless assignments.


Common mistaken usages of the sync/atomic package

Flag: -atomic

Common mistaken usages of the sync/atomic package.


Mistakes involving boolean operators

Flag: -bool

Mistakes involving boolean operators.


Badly formed or misplaced +build tags

Flag: -buildtags

Badly formed or misplaced +build tags.


Invalid uses of cgo

Flag: -cgocall

Detect some violations of the cgo pointer passing rules.


Composite literals use field-keyed elements

Flag: -composites

Composite struct literals that do not use the field-keyed syntax.


Locks are passed by value

Flag: -copylocks

Locks that are erroneously passed by value.


HTTP responses used incorrectly

Flag: -httpresponse

Mistakes deferring a function call on an HTTP response before checking whether the error returned with the response was nil.


Failure to call the cancelation function returned by context.WithCancel.

Flag: -lostcancel

The cancelation function returned by context.WithCancel, WithTimeout, and
WithDeadline must be called or the new context will remain live until its
parent context is cancelled. (The background context is never cancelled.)


Non-standard signatures for methods with familiar names

Flag: -methods

Non-standard signatures for methods with familiar names, including:

```
Format GobEncode GobDecode MarshalJSON MarshalXML
Peek ReadByte ReadFrom ReadRune Scan Seek
UnmarshalJSON UnreadByte UnreadRune WriteByte
WriteTo
```


Nil function comparison

Flag: -nilfunc

Comparisons between functions and nil.


Suspicious calls to functions in the Printf family

Flag: -printf

Suspicious calls to functions in the Printf family, including any functions
with these names, disregarding case:

```
Print Printf Println
Fprint Fprintf Fprintln
Sprint Sprintf Sprintln
Error Errorf
Fatal Fatalf
Log Logf
Panic Panicf Panicln
```


Incorrect uses of range loop variables in closures

Flag: -rangeloops

Incorrect uses of range loop variables in closures. 


Variables that may have been unintentionally shadowed

Flag: -shadow

Variables that may have been unintentionally shadowed.


Useless shifts

Flag: -shift

Shifts equal to or longer than the variable's length.


Struct field tags do not have canonical format

Flag: -structtags

Struct tags that do not follow the format understood by `reflect.StructTag.Get`. Well-known encoding struct tags (json, xml) used with unexported fields.


Common mistaken usages of tests/documentation

Flag: -tests

Mistakes involving tests including functions with incorrect names or
signatures and example tests that document identifiers not in the package.


Unreachable code

Flag: -unreachable

Unreachable code.


Misuse of unsafe Pointers

Flag: -unsafeptr

Likely incorrect uses of unsafe.Pointer to convert integers to pointers. A
conversion from uintptr to unsafe.Pointer is invalid if it implies that
there is a uintptr-typed word in memory that holds a pointer value, because
that word will be invisible to stack copying and to the garbage collector.


Unused result of certain function calls

Flag: -unusedresult

Calls to well-known functions and methods that return a value that is
discarded. By default, this includes functions like fmt.Errorf and
fmt.Sprintf and methods like String and Error. The flags -unusedfuncs and
-unusedstringmethods control the set.